// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.0
// source: metadata.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// wrapper for all metadata pages
type MetadataPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// optional; not present for pure diff pages
	DbRoot *RAIDatabase `protobuf:"bytes,1,opt,name=db_root,json=dbRoot,proto3" json:"db_root,omitempty"`
	Diff   *Diff        `protobuf:"bytes,2,opt,name=diff,proto3" json:"diff,omitempty"`
}

func (x *MetadataPage) Reset() {
	*x = MetadataPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataPage) ProtoMessage() {}

func (x *MetadataPage) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataPage.ProtoReflect.Descriptor instead.
func (*MetadataPage) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *MetadataPage) GetDbRoot() *RAIDatabase {
	if x != nil {
		return x.DbRoot
	}
	return nil
}

func (x *MetadataPage) GetDiff() *Diff {
	if x != nil {
		return x.Diff
	}
	return nil
}

// named RAIDatabase to not conflict with the RAI.Database namespace.
type RAIDatabase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Currently on version 1.
	// This is only needed at the top level (i.e., on a database page instead of diff pages)
	// because on any major version change we should rewrite the whole thing instead of leaving
	// dangling old-format pages. This lets us eventually clean up the old codepaths instead of
	// leaving migration logic around forever.
	MetadataFormatVersion int64         `protobuf:"varint,1,opt,name=metadata_format_version,json=metadataFormatVersion,proto3" json:"metadata_format_version,omitempty"`
	Root                  *MetadataNode `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
	// ws_context in Julia. if we ever need to keep more workspace-related things, we should
	// consider moving all of it to a containing proto message.
	EntityCounter int64 `protobuf:"varint,3,opt,name=entity_counter,json=entityCounter,proto3" json:"entity_counter,omitempty"`
}

func (x *RAIDatabase) Reset() {
	*x = RAIDatabase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RAIDatabase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RAIDatabase) ProtoMessage() {}

func (x *RAIDatabase) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RAIDatabase.ProtoReflect.Descriptor instead.
func (*RAIDatabase) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{1}
}

func (x *RAIDatabase) GetMetadataFormatVersion() int64 {
	if x != nil {
		return x.MetadataFormatVersion
	}
	return 0
}

func (x *RAIDatabase) GetRoot() *MetadataNode {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *RAIDatabase) GetEntityCounter() int64 {
	if x != nil {
		return x.EntityCounter
	}
	return 0
}

// MetadataNodes represent the tree structure of incremental diffs, and correspond to the
// Database.MetadataNode struct.
type MetadataNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capacity  int64 `protobuf:"varint,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Leafcount int64 `protobuf:"varint,2,opt,name=leafcount,proto3" json:"leafcount,omitempty"`
	// If Page is present, then children must be empty
	// and vice versa.
	Consolidated *PageId         `protobuf:"bytes,3,opt,name=consolidated,proto3" json:"consolidated,omitempty"`
	Children     []*MetadataNode `protobuf:"bytes,4,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *MetadataNode) Reset() {
	*x = MetadataNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataNode) ProtoMessage() {}

func (x *MetadataNode) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataNode.ProtoReflect.Descriptor instead.
func (*MetadataNode) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2}
}

func (x *MetadataNode) GetCapacity() int64 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *MetadataNode) GetLeafcount() int64 {
	if x != nil {
		return x.Leafcount
	}
	return 0
}

func (x *MetadataNode) GetConsolidated() *PageId {
	if x != nil {
		return x.Consolidated
	}
	return nil
}

func (x *MetadataNode) GetChildren() []*MetadataNode {
	if x != nil {
		return x.Children
	}
	return nil
}

// In RAI, a PageId is 128-bit but this may change in the future
type PageId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid *RelUInt128 `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *PageId) Reset() {
	*x = PageId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageId) ProtoMessage() {}

func (x *PageId) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageId.ProtoReflect.Descriptor instead.
func (*PageId) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{3}
}

func (x *PageId) GetPid() *RelUInt128 {
	if x != nil {
		return x.Pid
	}
	return nil
}

type RelationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only one of betree or inline should exist
	Betree *BeTreeRelation `protobuf:"bytes,3,opt,name=betree,proto3" json:"betree,omitempty"`
	Inline *InlineRelation `protobuf:"bytes,4,opt,name=inline,proto3" json:"inline,omitempty"`
}

func (x *RelationData) Reset() {
	*x = RelationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationData) ProtoMessage() {}

func (x *RelationData) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationData.ProtoReflect.Descriptor instead.
func (*RelationData) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{4}
}

func (x *RelationData) GetBetree() *BeTreeRelation {
	if x != nil {
		return x.Betree
	}
	return nil
}

func (x *RelationData) GetInline() *InlineRelation {
	if x != nil {
		return x.Inline
	}
	return nil
}

type BeTreeRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root         *PageId `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	ElementCount int64   `protobuf:"varint,2,opt,name=element_count,json=elementCount,proto3" json:"element_count,omitempty"`
	TreeHeight   int64   `protobuf:"varint,3,opt,name=tree_height,json=treeHeight,proto3" json:"tree_height,omitempty"`
}

func (x *BeTreeRelation) Reset() {
	*x = BeTreeRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeTreeRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeTreeRelation) ProtoMessage() {}

func (x *BeTreeRelation) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeTreeRelation.ProtoReflect.Descriptor instead.
func (*BeTreeRelation) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{5}
}

func (x *BeTreeRelation) GetRoot() *PageId {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *BeTreeRelation) GetElementCount() int64 {
	if x != nil {
		return x.ElementCount
	}
	return 0
}

func (x *BeTreeRelation) GetTreeHeight() int64 {
	if x != nil {
		return x.TreeHeight
	}
	return 0
}

// This corresponds to SerializedTipOrDiff, but leaving out the 'Tip'
// related fields, which are now separate.
type Diff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Version string for RAI, used to detect when we are restoring
	// from a possibly outdated RAI version with different
	// object layouts for derived data.
	RaiServerVersion string `protobuf:"bytes,1,opt,name=rai_server_version,json=raiServerVersion,proto3" json:"rai_server_version,omitempty"`
	// version_interval in SerializedTipOrDiff
	DatabaseVersionMin int64 `protobuf:"varint,2,opt,name=database_version_min,json=databaseVersionMin,proto3" json:"database_version_min,omitempty"`
	DatabaseVersionMax int64 `protobuf:"varint,3,opt,name=database_version_max,json=databaseVersionMax,proto3" json:"database_version_max,omitempty"`
	// Arroyo SnapshotDiff for input key/values.
	Inputs       *InputDiff       `protobuf:"bytes,4,opt,name=inputs,proto3" json:"inputs,omitempty"`
	SourceInputs *SourceInputDiff `protobuf:"bytes,5,opt,name=source_inputs,json=sourceInputs,proto3" json:"source_inputs,omitempty"`
	// Arroyo SnapshotDiff for derived key/values. Julia-serialized, discarded on rai-server version change.
	Derived *DerivedDiff `protobuf:"bytes,6,opt,name=derived,proto3" json:"derived,omitempty"`
}

func (x *Diff) Reset() {
	*x = Diff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diff) ProtoMessage() {}

func (x *Diff) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diff.ProtoReflect.Descriptor instead.
func (*Diff) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{6}
}

func (x *Diff) GetRaiServerVersion() string {
	if x != nil {
		return x.RaiServerVersion
	}
	return ""
}

func (x *Diff) GetDatabaseVersionMin() int64 {
	if x != nil {
		return x.DatabaseVersionMin
	}
	return 0
}

func (x *Diff) GetDatabaseVersionMax() int64 {
	if x != nil {
		return x.DatabaseVersionMax
	}
	return 0
}

func (x *Diff) GetInputs() *InputDiff {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Diff) GetSourceInputs() *SourceInputDiff {
	if x != nil {
		return x.SourceInputs
	}
	return nil
}

func (x *Diff) GetDerived() *DerivedDiff {
	if x != nil {
		return x.Derived
	}
	return nil
}

// Source inputs are not intended to be kept around forever, so we store them separately from relation inputs.
// This should make it easier to rip them out later as part of #7773.
type SourceInputDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUpdates []*Source `protobuf:"bytes,1,rep,name=source_updates,json=sourceUpdates,proto3" json:"source_updates,omitempty"`
	// names of deleted sources
	SourceDeletes []string `protobuf:"bytes,2,rep,name=source_deletes,json=sourceDeletes,proto3" json:"source_deletes,omitempty"`
}

func (x *SourceInputDiff) Reset() {
	*x = SourceInputDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceInputDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceInputDiff) ProtoMessage() {}

func (x *SourceInputDiff) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceInputDiff.ProtoReflect.Descriptor instead.
func (*SourceInputDiff) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{7}
}

func (x *SourceInputDiff) GetSourceUpdates() []*Source {
	if x != nil {
		return x.SourceUpdates
	}
	return nil
}

func (x *SourceInputDiff) GetSourceDeletes() []string {
	if x != nil {
		return x.SourceDeletes
	}
	return nil
}

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{8}
}

func (x *Source) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Source) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// We do not plan to store any inputs that are not relations
type InputDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Note: need to separately enforce uniqueness (updates and deletes must be disjoint)
	EdbUpdates []*Relation   `protobuf:"bytes,1,rep,name=edb_updates,json=edbUpdates,proto3" json:"edb_updates,omitempty"`
	EdbDeletes []*RelationId `protobuf:"bytes,2,rep,name=edb_deletes,json=edbDeletes,proto3" json:"edb_deletes,omitempty"`
}

func (x *InputDiff) Reset() {
	*x = InputDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputDiff) ProtoMessage() {}

func (x *InputDiff) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputDiff.ProtoReflect.Descriptor instead.
func (*InputDiff) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{9}
}

func (x *InputDiff) GetEdbUpdates() []*Relation {
	if x != nil {
		return x.EdbUpdates
	}
	return nil
}

func (x *InputDiff) GetEdbDeletes() []*RelationId {
	if x != nil {
		return x.EdbDeletes
	}
	return nil
}

// DerivedDiff is treated as binary for now.
// Possibly we could separate IDB relations?
type DerivedDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serialization []byte `protobuf:"bytes,1,opt,name=serialization,proto3" json:"serialization,omitempty"`
}

func (x *DerivedDiff) Reset() {
	*x = DerivedDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DerivedDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DerivedDiff) ProtoMessage() {}

func (x *DerivedDiff) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DerivedDiff.ProtoReflect.Descriptor instead.
func (*DerivedDiff) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{10}
}

func (x *DerivedDiff) GetSerialization() []byte {
	if x != nil {
		return x.Serialization
	}
	return nil
}

// Relation, types
type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *RelationId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Currently only contains the RelKey FD
	FunctionalDependencies []*FunctionalDependency `protobuf:"bytes,2,rep,name=functional_dependencies,json=functionalDependencies,proto3" json:"functional_dependencies,omitempty"`
	RelationData           *RelationData           `protobuf:"bytes,3,opt,name=relation_data,json=relationData,proto3" json:"relation_data,omitempty"`
	StorageConfig          *StorageConfig          `protobuf:"bytes,4,opt,name=storage_config,json=storageConfig,proto3" json:"storage_config,omitempty"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{11}
}

func (x *Relation) GetId() *RelationId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Relation) GetFunctionalDependencies() []*FunctionalDependency {
	if x != nil {
		return x.FunctionalDependencies
	}
	return nil
}

func (x *Relation) GetRelationData() *RelationData {
	if x != nil {
		return x.RelationData
	}
	return nil
}

func (x *Relation) GetStorageConfig() *StorageConfig {
	if x != nil {
		return x.StorageConfig
	}
	return nil
}

type StorageConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// for inline relations, the storage config is empty
	IsEmpty bool `protobuf:"varint,1,opt,name=is_empty,json=isEmpty,proto3" json:"is_empty,omitempty"`
	// otherwise, the betree config describes how the paged data is stored
	BeTreeConfig *BeTreeConfig `protobuf:"bytes,2,opt,name=be_tree_config,json=beTreeConfig,proto3" json:"be_tree_config,omitempty"`
}

func (x *StorageConfig) Reset() {
	*x = StorageConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageConfig) ProtoMessage() {}

func (x *StorageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageConfig.ProtoReflect.Descriptor instead.
func (*StorageConfig) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{12}
}

func (x *StorageConfig) GetIsEmpty() bool {
	if x != nil {
		return x.IsEmpty
	}
	return false
}

func (x *StorageConfig) GetBeTreeConfig() *BeTreeConfig {
	if x != nil {
		return x.BeTreeConfig
	}
	return nil
}

type BeTreeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epsilon   float64 `protobuf:"fixed64,1,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	MaxPivots int64   `protobuf:"varint,2,opt,name=max_pivots,json=maxPivots,proto3" json:"max_pivots,omitempty"`
	MaxDeltas int64   `protobuf:"varint,3,opt,name=max_deltas,json=maxDeltas,proto3" json:"max_deltas,omitempty"`
	MaxLeaf   int64   `protobuf:"varint,4,opt,name=max_leaf,json=maxLeaf,proto3" json:"max_leaf,omitempty"`
}

func (x *BeTreeConfig) Reset() {
	*x = BeTreeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeTreeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeTreeConfig) ProtoMessage() {}

func (x *BeTreeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeTreeConfig.ProtoReflect.Descriptor instead.
func (*BeTreeConfig) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{13}
}

func (x *BeTreeConfig) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *BeTreeConfig) GetMaxPivots() int64 {
	if x != nil {
		return x.MaxPivots
	}
	return 0
}

func (x *BeTreeConfig) GetMaxDeltas() int64 {
	if x != nil {
		return x.MaxDeltas
	}
	return 0
}

func (x *BeTreeConfig) GetMaxLeaf() int64 {
	if x != nil {
		return x.MaxLeaf
	}
	return 0
}

type FunctionalDependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyIndexes   []int32 `protobuf:"varint,1,rep,packed,name=key_indexes,json=keyIndexes,proto3" json:"key_indexes,omitempty"`
	ValueIndexes []int32 `protobuf:"varint,2,rep,packed,name=value_indexes,json=valueIndexes,proto3" json:"value_indexes,omitempty"`
}

func (x *FunctionalDependency) Reset() {
	*x = FunctionalDependency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionalDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionalDependency) ProtoMessage() {}

func (x *FunctionalDependency) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionalDependency.ProtoReflect.Descriptor instead.
func (*FunctionalDependency) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{14}
}

func (x *FunctionalDependency) GetKeyIndexes() []int32 {
	if x != nil {
		return x.KeyIndexes
	}
	return nil
}

func (x *FunctionalDependency) GetValueIndexes() []int32 {
	if x != nil {
		return x.ValueIndexes
	}
	return nil
}

type InlineRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// We only expect to inline relatively small relations, so we store data tuple-wise.
	// The types are specified in the relation id.
	Tuples []*RelTuple `protobuf:"bytes,1,rep,name=tuples,proto3" json:"tuples,omitempty"`
	// The hash field of an inline relation is used to check equality of inline relations.
	// by preserving it here, we preserve the effective identifier over the lifetime of
	// this relation, which is necessary for the verify_metadata_roundtrip checks to pass.
	Hash uint64 `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *InlineRelation) Reset() {
	*x = InlineRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InlineRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InlineRelation) ProtoMessage() {}

func (x *InlineRelation) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InlineRelation.ProtoReflect.Descriptor instead.
func (*InlineRelation) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{15}
}

func (x *InlineRelation) GetTuples() []*RelTuple {
	if x != nil {
		return x.Tuples
	}
	return nil
}

func (x *InlineRelation) GetHash() uint64 {
	if x != nil {
		return x.Hash
	}
	return 0
}

var File_metadata_proto protoreflect.FileDescriptor

var file_metadata_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x50, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x72,
	0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x52, 0x41, 0x49, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x06, 0x64, 0x62, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x44, 0x69, 0x66, 0x66, 0x52, 0x04, 0x64, 0x69, 0x66, 0x66, 0x22, 0xa7, 0x01, 0x0a, 0x0b, 0x52,
	0x41, 0x49, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x22, 0xd0, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x66, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x66, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x43, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x3f, 0x0a, 0x06, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x55, 0x49, 0x6e, 0x74,
	0x31, 0x32, 0x38, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x06, 0x62, 0x65, 0x74,
	0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x42, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x62, 0x65, 0x74, 0x72, 0x65, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x0e,
	0x42, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33,
	0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x04, 0x72,
	0x6f, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x65, 0x65,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74,
	0x72, 0x65, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xe3, 0x02, 0x0a, 0x04, 0x44, 0x69,
	0x66, 0x66, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x61, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x72, 0x61, 0x69, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x30, 0x0a, 0x14, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x69, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x78, 0x12, 0x3a, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x44, 0x69, 0x66, 0x66, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x12, 0x4d, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x69, 0x66,
	0x66, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12,
	0x3e, 0x0a, 0x07, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76,
	0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x52, 0x07, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x22,
	0x80, 0x01, 0x0a, 0x0f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44,
	0x69, 0x66, 0x66, 0x12, 0x46, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0d, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x73, 0x22, 0x32, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x44, 0x69, 0x66, 0x66, 0x12, 0x42, 0x0a, 0x0b, 0x65, 0x64, 0x62, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x64,
	0x62, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0b, 0x65, 0x64, 0x62, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x52, 0x0a, 0x65, 0x64, 0x62, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x22, 0x33,
	0x0a, 0x0b, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x33, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x66, 0x0a, 0x17, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x16, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x4a, 0x0a,
	0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x0e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x77, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0e, 0x62, 0x65, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x65, 0x54, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0c, 0x62, 0x65, 0x54, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x81, 0x01, 0x0a, 0x0c, 0x42, 0x65, 0x54, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x78, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6d, 0x61, 0x78, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x61, 0x78, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61,
	0x78, 0x5f, 0x6c, 0x65, 0x61, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61,
	0x78, 0x4c, 0x65, 0x61, 0x66, 0x22, 0x5c, 0x0a, 0x14, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x22, 0x5f, 0x0a, 0x0e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x06, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x52, 0x65, 0x6c, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_metadata_proto_rawDescOnce sync.Once
	file_metadata_proto_rawDescData = file_metadata_proto_rawDesc
)

func file_metadata_proto_rawDescGZIP() []byte {
	file_metadata_proto_rawDescOnce.Do(func() {
		file_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(file_metadata_proto_rawDescData)
	})
	return file_metadata_proto_rawDescData
}

var file_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_metadata_proto_goTypes = []interface{}{
	(*MetadataPage)(nil),         // 0: com.relationalai.protos.MetadataPage
	(*RAIDatabase)(nil),          // 1: com.relationalai.protos.RAIDatabase
	(*MetadataNode)(nil),         // 2: com.relationalai.protos.MetadataNode
	(*PageId)(nil),               // 3: com.relationalai.protos.PageId
	(*RelationData)(nil),         // 4: com.relationalai.protos.RelationData
	(*BeTreeRelation)(nil),       // 5: com.relationalai.protos.BeTreeRelation
	(*Diff)(nil),                 // 6: com.relationalai.protos.Diff
	(*SourceInputDiff)(nil),      // 7: com.relationalai.protos.SourceInputDiff
	(*Source)(nil),               // 8: com.relationalai.protos.Source
	(*InputDiff)(nil),            // 9: com.relationalai.protos.InputDiff
	(*DerivedDiff)(nil),          // 10: com.relationalai.protos.DerivedDiff
	(*Relation)(nil),             // 11: com.relationalai.protos.Relation
	(*StorageConfig)(nil),        // 12: com.relationalai.protos.StorageConfig
	(*BeTreeConfig)(nil),         // 13: com.relationalai.protos.BeTreeConfig
	(*FunctionalDependency)(nil), // 14: com.relationalai.protos.FunctionalDependency
	(*InlineRelation)(nil),       // 15: com.relationalai.protos.InlineRelation
	(*RelUInt128)(nil),           // 16: com.relationalai.protos.RelUInt128
	(*RelationId)(nil),           // 17: com.relationalai.protos.RelationId
	(*RelTuple)(nil),             // 18: com.relationalai.protos.RelTuple
}
var file_metadata_proto_depIdxs = []int32{
	1,  // 0: com.relationalai.protos.MetadataPage.db_root:type_name -> com.relationalai.protos.RAIDatabase
	6,  // 1: com.relationalai.protos.MetadataPage.diff:type_name -> com.relationalai.protos.Diff
	2,  // 2: com.relationalai.protos.RAIDatabase.root:type_name -> com.relationalai.protos.MetadataNode
	3,  // 3: com.relationalai.protos.MetadataNode.consolidated:type_name -> com.relationalai.protos.PageId
	2,  // 4: com.relationalai.protos.MetadataNode.children:type_name -> com.relationalai.protos.MetadataNode
	16, // 5: com.relationalai.protos.PageId.pid:type_name -> com.relationalai.protos.RelUInt128
	5,  // 6: com.relationalai.protos.RelationData.betree:type_name -> com.relationalai.protos.BeTreeRelation
	15, // 7: com.relationalai.protos.RelationData.inline:type_name -> com.relationalai.protos.InlineRelation
	3,  // 8: com.relationalai.protos.BeTreeRelation.root:type_name -> com.relationalai.protos.PageId
	9,  // 9: com.relationalai.protos.Diff.inputs:type_name -> com.relationalai.protos.InputDiff
	7,  // 10: com.relationalai.protos.Diff.source_inputs:type_name -> com.relationalai.protos.SourceInputDiff
	10, // 11: com.relationalai.protos.Diff.derived:type_name -> com.relationalai.protos.DerivedDiff
	8,  // 12: com.relationalai.protos.SourceInputDiff.source_updates:type_name -> com.relationalai.protos.Source
	11, // 13: com.relationalai.protos.InputDiff.edb_updates:type_name -> com.relationalai.protos.Relation
	17, // 14: com.relationalai.protos.InputDiff.edb_deletes:type_name -> com.relationalai.protos.RelationId
	17, // 15: com.relationalai.protos.Relation.id:type_name -> com.relationalai.protos.RelationId
	14, // 16: com.relationalai.protos.Relation.functional_dependencies:type_name -> com.relationalai.protos.FunctionalDependency
	4,  // 17: com.relationalai.protos.Relation.relation_data:type_name -> com.relationalai.protos.RelationData
	12, // 18: com.relationalai.protos.Relation.storage_config:type_name -> com.relationalai.protos.StorageConfig
	13, // 19: com.relationalai.protos.StorageConfig.be_tree_config:type_name -> com.relationalai.protos.BeTreeConfig
	18, // 20: com.relationalai.protos.InlineRelation.tuples:type_name -> com.relationalai.protos.RelTuple
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_metadata_proto_init() }
func file_metadata_proto_init() {
	if File_metadata_proto != nil {
		return
	}
	file_schema_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_metadata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RAIDatabase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeTreeRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Diff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceInputDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DerivedDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeTreeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionalDependency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InlineRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metadata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_metadata_proto_goTypes,
		DependencyIndexes: file_metadata_proto_depIdxs,
		MessageInfos:      file_metadata_proto_msgTypes,
	}.Build()
	File_metadata_proto = out.File
	file_metadata_proto_rawDesc = nil
	file_metadata_proto_goTypes = nil
	file_metadata_proto_depIdxs = nil
}
